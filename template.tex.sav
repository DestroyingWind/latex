\documentclass{article}
\usepackage{ctex}
\usepackage[linesnumbered,boxed,ruled,commentsnumbered]{algorithm2e}
\usepackage{subfigure}
\usepackage{graphicx}
\usepackage[section]{placeins}
\usepackage{float}

\renewcommand{\algorithmcfname}{算法}
\SetKwInput{KwIn}{输入}
\SetKwInput{KwOut}{输出}


\begin{document}

%\begin{algorithm}
%\KwIn{\\ 一个点集 $S$\;}
%\KwOut{\\ 一个Delaunay三角化 $T$\;}
%随机选取三个点生成第一个三角形，从$S$中移除这三个点\;
%\While{$S$非空}{
%取出一个点，记为$p$在当前三角化中定位该点\;
%\eIf{$p$ 在当前三角化的闭包中}
%{通过1-3和2-4边翻转将新点插入当前三角化中\;}
%{将新点与对应合适的闭包上的边生成一个新的三角形\;}
%通过Lawson边翻转将新的三角化变成Delaunay三角化\;}
%\caption{增量Delaunay三角化生成算法}
%\end{algorithm}

\begin{algorithm}
\KwIn{\\ 一个点集 $S$\\ 一组描述物体边界运动的向量A series of vectors describing the motion of boundary points of each step $\{v_s^t\}$\\Max step $Maxstep$}
\KwOut{\\A series of meshes $\{M^t\}$}
Generate the triangulation of the first step\;
$step=0$\;
Output the triangulation as $M^{step}$\;
\While{$step<Maxstep$}{
Recover the segments from the refined triangulation by removing the free segment points\;
Remove the collision points and edges\;
Move the boundary edges via moving the constrained segment points $S_i^{step+1}=S_i^{step}+v_{S_i}^{step}$\;
Call locally lawson flip and locally Delaunay refinement\;
Output the triangulation as $M^{step}$\;
}
\caption{Dynamic mesh generation algorithm}
\label{DMGalgo}
\end{algorithm}

\end{document}