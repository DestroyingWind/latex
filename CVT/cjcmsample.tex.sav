%& -bibtex
%
% $Id: cjcmsample.tex,v 1.5 2007/06/05 02:59:29 zlb Exp $

% 文档类选项：
%   draft   - 草稿模式 (缺省)
%   final   - 终稿模式
%   jssx    - 《计算数学》(缺省)
%   szjs    - 《数值计算与计算机应用》

\documentclass[szjs]{cjcmltx}
\usepackage[linesnumbered,boxed,ruled,commentsnumbered]{algorithm2e}
\usepackage{subfigure}
\usepackage{graphicx}
\begin{document}

\def\Jvol{??}
\def\Jno{?}
\def\Jyear{200?}
\def\Jmonth{1}
\def\Jreceived{2017年8月7日}
\def\Jrevised{}
\setcounter{page}{1}

%------------------------ 中文标题、摘要 --------------------------

\markright{高天成~等: 基于重心沃罗努瓦划分的流场可视化}

\title{基于重心沃罗努瓦划分的流场可视化
    \thanks{MJ-2014-F}}

\author{高天成\affiliation{北京航空航天大学数学与系统科学学院~100191}
    \and
    朱立永\affiliation{北京航空航天大学数学与系统科学学院~100191}}

\maketitle

\begin{abstract}
\indent CVT（Centroidal Voronoi tessellation，重心沃罗努瓦划分）是沃罗努瓦划分的一种，其要求每个沃罗努瓦区域（Voronoi region）的生成元恰好为该沃罗努瓦区域的重心。这样的沃罗努瓦划分相较一般的沃罗努瓦划分更能突出的表现流场的一些特征。而科学计算可视化中正要求对目标的特征的进行图形化。所以将CVT与流场可视化结合起来，可以用少量的点和箭头表达大量的流场信息，生成人眼更易接受的流场示意图。\\
\indent 本文将介绍可视化和CVT，然后着重讨论如何对稳定流场和非稳定流场生成CVT，进而进行合适的可视化，\\
\end{abstract}

\begin{keywords}
科学可视化，科学计算可视化，重心沃罗努瓦划分，流场
\end{keywords}

\begin{classification}
68U05
\end{classification}

%------------------------ 英文标题、摘要 --------------------------

\title{VISUALIZATION OF FLOW FIELD BASED ON CENTROIDAL VORONOI TESSELLATION}

\author{Tiancheng Gao
    \thanks{School of Mathematics and Systems Science
Beihang University, Beijing 100191, China
}
        \and
    Liyong Zhu
        \thanks{School of Mathematics and Systems Science
Beihang University, Beijing 100191, China}}

\maketitle

\begin{abstract}
\indent A Centroidal Voronoi Tessellation (CVT) is a Voronoi Tessellation in which the generators are the centroids for each Voronoi region.By this kind of tessellation,the centroids represent the whole region's information.It is likely to convey us some characteristics while the common Voronoi Tessellation can't.Meanwhile,Visualization in Scientific Computing(ViSC) just requires us visualizing the representative characteristics of the field.In this case, it can be done with a few points or arrows to express a lot of information,by combining the CVT with the flow field visualization, and generating the image that can be more accessible to people.\\
\indent In this paper,it is mentioned that what are ViSC and CVT.Then focusing on how to generate a CVT and how to use CVT to generate a characteristic visualization,for steady field as well as consecutive field.
\end{abstract}

\begin{keywords}
Scientific Visualization,Visualization in Scientific Computing,Centroidal Voronoi tessellation,Flow Field
\end{keywords}

\begin{classification}
68U05
\end{classification}

\section{引　　言}

\indent 科学计算可视化，是指将科学计算、实验获得的数据，转化为人类可以直接识别的的图像，图形的行为。因为人们对大量的数据很难直接理解与分析，同时人类获得的信息中，视觉信息占着绝大多数。所以我们通过可视化的方法，对数据进行一步转化，使的人们可以直观的看出某些数据的某些特点，为后续的精确分析、处理提供方向上的指引和规划。当然，因为人眼本身的的性质，我们无法通过图像获得精确的信息，所以可视化无法作为分析处理的一步，也始终没有产生对可视化效果优劣的明确评价标准；但也正因为如此，我们才需要不断改进可视化方法，使得其能够更加突出的表现目标的某些特征（突出到人眼能够区分识别）。这正是本文的目标，并且我们将这个指标作为定性的评价可视化优劣的标准。通过CVT生成的图像，恰能明确反映目标流场的特征的，成为本文实验与改进目标。\\
\indent 本章将主要介绍可视化的发展历史与现状，从而更加明晰我们究竟为什么要作做可视化以及如何进行科学计算可视化可视化。\\
\subsection{可视化的历史背景}
可视化（Visualization），顾名思义，就是将非图形化的事物转换成图形化的事物，将非视觉信息转化为视觉信息，亦可翻译为图形化，图示化。
\indent 事实上，最早的可视化可以可以追寻到很古老。举个简单的例子，从抽象的数字“2”的到符号“$\romannumeral2$”的转化，就是一种可视化。尽管其转化的符号也是一个抽象的符号，但是他完成了不可视到可视的转化，使得互相的信息的交流成为可能。
现代对可视化的分类，主要将可视化按照其处理的对象分成3类：科学计算可视化：将科学计算获得的数据藉由计算机图形学和图像处理技术的方法将其传化为图形或图像进行显示；信息可视化：将已知的信息，如每天股市的交易情况，转化为可以直观识别的图形；知识可视化：将人类的知识转化为图形从而便于交流，并帮助他人获得正确的知识。\\
\indent 作为学科术语,“可视化”一词正式出现在1987 年2月在美国国家科学基金会(National Science Foundation,NSF) 召开的图形图像专题研讨会上。并在此会议上正式给出了科学计算可视化（Visualization in Scientific Computing，ViSC）的定义、涵盖的领域。从此，科学计算可视化成为了一门正式的专门学科。\\
\indent 但在计算机用于科学计算的早期,由于计算机硬件条件的限制,科学计算只能以批处理方式进行。由于没有交互功能,科学家不能对计算过程进行干预和引导,只有被动地等待计算结果的输出,且大量的输出结果也是用人工方式处理。最好的辅助方法是用绘图仪以二维的方式展示结果。这样以来,大量信息被处理方法丢失,科学家得不到计算结果的直观、形象的整体印象,处理结果数据的任务繁杂,花费时间往往是计算时间的十几倍到几十倍。随着计算机处理图形、图像功能的不断提高,科学计算可视化成为了可能。
\subsection{科学计算可视化的现状}
ViSC被定义为：用计算机图形学和图形处理技术,将科学计算过程中产生的数据及计算结果转换为图形或图像在屏幕上显示出来,并进行交互处理的理论、方法和技术。它涉及计算机图形学、图像处理、计算机视觉、计算机辅助设计及图形用户界面等多个研究领域。\\
\indent 科学计算可视化的目的是理解自然的本质。要达到这个目的,科学家把科学数据,包括测量获得的数值或是计算中涉及、产生的数字信息变为直观的、以图形图像形式表示的、随时间和空间变化的物理现象或物理量呈现在研究者面前,使他们能够观察、模拟和计算。这个过程可细化为以下四个步骤:a. 过滤,预处理原始数据、转换数据形式、滤掉噪声、抽取感兴趣的数据等;b. 映射,将过滤后的数据映射为几何元素,常见有点、线、面图元、三维体图元等;c.绘制,几何元素绘制,得到结果图像;d.反馈,显示图像,并分析得到的可视结果。ViSC技术的意义重大,它大大加快了数据的处理速度,使每日每时都在产生的庞大数据得到有效的利用;实现人与人、人与机器之间的图像通讯,增强了人们观察事物规律的能力;使科学家在得到计算结果的同时,知道在计算过程中发生了什么现象,并可改变参数,观察其影响,对计算过程实现引导和控制。\\
\indent 随着可视化技术应用领域不断扩大,人们对其需求越来越复杂,可视化概念扩展到工程数据和测量数据时,学术界把这种空间数据场的可视化称为体可视化(Volume
visualization)技术。一般不将它看成是可视化的一个分支,而作
为科学计算可视化的一个方向处理。
体可视化技术研究如何表示、维护和绘制体数据集,从而观察数据内部结构和理解事物复杂特性。它是一种从体数据集中抽取内在的、本质的信息,并以图形图像方式交互地表现出来的技术。体数据集由三维笛卡尔网格体元(网格点上的数据值)构成,将网格体元存储在三维数组(体缓冲区)中。体数据集可来源于许多领域,这决定了体可视化的应用范围。如:工程建筑的空间场,气象卫星测量的空间场,航空航天实验、核爆炸模拟等对应的速度场和温度场,地震预报的力场,工业产品超声波探测的零件密度场,核磁共震产生的人体器官密度场等。\\
\indent 十数年前,由于计算机的速度、显示器的分辨率等原因,使得体可视化在数据量即使较小的情况下也要花费很长的时间。解决这个问题来源于两个方面的努力:一是新型算法的研制成功,如表面拟合法(Surface fitting)和体绘制(Volume rendering)。表面拟合法从数据场中提取等值面后对其进行展示,
其显示速度快。缺点是由于只显示指定等值面非常容易丢失数据体中的关键信息。体绘制算法无需几何元素(点、线、面等)作中介表示,而是直接将整个数据场投影到屏幕空间。由于每次显示均要涉及整个数据集,因此它的显示速度比表面拟合法要慢,但它的显示质量很高且不丢失任何信息。二是硬件技术和并行计算技术的发展。并行体可视化既提供快速绘制的可能,又能够处理大的划分式数据。一个体可视化系统一般具有下列功能:a. 高质量的数据表示方法;b.处理大规模的数据集合,且分辨率较高;c. 快速的图形、图像绘制算法;d.支持交互式操作,使用户参与控制。\\
\indent 流场可视化是科学计算可视化的另一个分支方向,同时是流体力学的重要部分。正是流场可视化的研究使得计算流力学(CFD)快速发展。计算流体力学中的数据类型主要有向量场和张量场。流场可视化用箭头、流线和粒子跟踪技术研究二维流场。对三维流场,人们还没有找到一个普遍接受的、直观的、符合视觉习惯的可视化方法。主要通过以下几种方法进行研究:a.改造体可视化技术,将其拓展,使其可以用于流场可视化;b. 流面技术,用流面加梯度线索的方法表示流场;c.图标技术;d.基于特征的可视化,这是从较高层次进行的流场可视化。
\indent 基于CVT的可视化是第四种，也即基于特征的可视化。在本文中，我们在计算时间增加很少的同时，将基于CVT的可视化拓展到多个时间步上。从而可视化一些非稳定场。








\section{基于CVT的静态流场数据可视化方法}

\subsection{CVT定义}
\indent 让我们从CVT的定义开始:\\
\indent 对一个点集 $\Omega\subseteq\mathbf{R}^n$，记 $d(x_1,x_2)\in \mathbf{R}$ 为 $x_1,x_2$两点间的距离。一个划分可以由一组子集 $\{ V_i\}^k_{i=1}$ 表示。这个划分称为CVT，如果满足:\\
\textcircled{1}.对所有的子集 $V_i$，$V_i\cap V_j=\emptyset \iff i\ne j,\bigcup^k_{i=1}\overline{V_i}=\overline{\Omega}$ 其中 $\overline{V_i},\overline{\Omega}$ is the closures of $V_i,\Omega$\\
\textcircled{2}.每个子集的重心，记为 $\{v_i\}_{i=1}^k$，恰好是整个沃罗努瓦划分的生成元，即为:
\begin{equation}
V_i=\{x\in\Omega |d(v_i,x)<d(v_j,x),j\ne i\}
\end{equation}
\indent 子集的重心 $v_i$ 是最小化能量积分的点 $x$。能量积分为:
\begin{equation}
E(x)=\int_{V_i}\rho(s)d^2(x,s)ds
\end{equation}
\indent $\rho(s)$为密度函数。\\
\indent 如果生成元给定，我们就可以通过等式(1)生成沃罗努瓦划分。同时，通过最小化函数（2）可以直接得到这个划分的全部重心。尽管如此，直接生成CVT依然很困难，因为重心和生成元通常不重合。这也反映了CVT是一类特殊的划分。所以我们需要一种有效且高效的算法来生成重心沃罗努瓦划分，而不是联立(1)(2)来解一个积分方程。这个算法会在下一节介绍。\\
\indent 值得一提的是，之前提到的距离$d$ 并不特指是欧氏距离，而可以是任意满足三条距离性质的函数。同时密度函数$\rho$ 也可以是一些人为设定的像是“密度”的函数。这些会在后面的章节中讨论。
\subsection{CVT生成算法}
\indent 最广泛使用的CVT生成算法是罗伊德(Lloyd)算法的一个修改版。





\begin{algorithm}[h]
\KwIn{\\ 一个点集 $\Omega$\;\\ 一个正整数 $k$ 用来将$\Omega$ 分成 $k$ 个区域\;\\ 一个阈值 $\epsilon$\;}
\KwOut{\\$k$ 个点作为CVT的生成元\;}

在$\Omega$中选取任意$k$ 个不重合的点，记为 $\{v_i\}_{i=1}^k$。\\

\While{true}{
对每一个 $0<i\le k$，生成它的区域$\{v_i\}_{i=1}^k$。记为$\{V_i\}_{i=1}^k$。\\
对每一个 $0<i\le k$，通过最小化能量函数计算区域重心$\{V_i\}_{i=1}^k$。记重心点为$\{\overline{v}_i\}_{i=1}^k$。\\
计算变动距离：$\delta=\sum_{i=1}^k d(v_i,\overline{v}_i)$.\\
\eIf{$\delta\le\epsilon$}
{输出$k$ 个点 $\{\overline{v}_i\}_{i=1}^k$ 并终止循环\;}
{替换 $v_i=\overline{v}_i,i=1,\dots,k$ 并继续循环\;}
}
\caption{简单点集CVT生成算法}
\end{algorithm}
\indent 这个算法的主要思想是当所有重心与其对应的生成元距离不是很远时，每对新旧区域的区别也不会很大。这样我们就可以得到一组可以生成十分接近CVT生成元的点。并且很显然，当这组点越接近精确的生成元时，得到的近似划分与精确划分的区别也就越小。
\subsection{对静态流场的CVT生成算法}
\indent 对一个简单点集，由Algorithm 1可以生成其对应的CVT。但是对象流场一样相对复杂一点的集合，如果我们希望重心点能够表现更多的信息，我们就应当将这些更多的信息加入计算之中。一个直接的想法就是修改能量函数。\\
\indent 对一个点集 $\Omega\subset \mathbf{R}^n,\forall x\in \Omega$，加上其上的向量函数 $y=F(x)\in \mathbf{R}^m$成为一个流场。为了最小化其上的能量函数，我们以以下算法为例：
\begin{algorithm}[h]
\caption{静态流场CVT生成算法}
\KwIn{\\ 一个流场中的点的集合$\Omega$ 和其上的向量函数 $F(x)$ \;\\ 一个正整数 $k$ 用来将$\Omega$ 分成 $k$ 个区域\;\\ 一个阈值 $\epsilon$\;}
\KwOut{\\$k$ 个点作为CVT的生成元\;\\ 每个生成元上一个向量\;}
选取$\Omega$中 $k$ 个不重合的点，记为 $\{x_i\}_{i=1}^k$\\
\While{true}
{由$k$个点$\{V_i\}_{i=1}^k$ 生成沃罗努瓦划分：
  $V_i=\{x\in \Omega|d(x,x_i)<d(x,x_j),j\ne i\}$\;
计算每个区域的重心：
$\overline{x}_i=\frac{\int_{V_i}|F(x)|^2 xdx}{\int_{V_i}|F(x)|^2 dx}$
$\overline{y}_i=\frac{\int_{V_i}|F(x)|F(x)dx}{|\int_{V_i}|F(x)|F(x)dx|}$
$i=1,\dots ,k$\;
计算位移量：$\delta=\sum_{i=1}^kd(x_i,\overline{x}_i)$\;
\eIf{$\delta<\epsilon$}
{
输出$\{\overline{x}_i,\overline{y}_i\}_{i=1}^k$ 并终止循环\;
}
{
替换$\{x_i,y_i\}\{\overline{x}_i,\overline{y}_i\}_{i=1}^k$ 并继续循环\;
}
}
\end{algorithm}
\\
\indent 在该算法中我们假定密度是常数，即整个场是均匀的。这等价于$\rho(x)\equiv 1$。对于场密度不为常数的情况，我们可以简单地将算法中的重心计算式改为：
\begin{equation}
\overline{x}_i=\frac{\int_{V_i}\rho(x)|F(x)|^2 xdx}{\int_{V_i}\rho(x)|F(x)|^2 dx}
\end{equation}
\begin{equation}
\overline{y}_i=\frac{\int_{V_i}\rho(x)|F(x)|F(x)dx}{|\int_{V_i}\rho(x)|F(x)|F(x)dx|}
\end{equation}
其中 $i=1,\dots ,k$.
\subsection{可视化策略}
\indent 之所以在可视化之前先进行CVT的处理而不直接对所有点进行描绘，其原因是希望通过CVT提取流场的特征，去除不必要的冗余，避免关注点被掩盖。相比于其它的特征提取方法，CVT是通过极小化能量函数获得的，因而可以将能量函数相对应的距离函数导出的特征表现的最突出。故而我们基于CVT进行后续的可视化工作。
\indent 通过罗伊德算法，我们可以得到一个误差足够小的CVT。至此，我们得到了一组重心点和其上的单位向量。如果我们只关心整个流场场的流向，那么这就已经足够了，但如果我们同时对流速也有兴趣，那么就需要对这个单位向量的模长进行修正。因为重心代表了整个区域的信息，所以在修正模长时一般选择一种有代表性的长度，典型的有区域最大模长、最小模长，或者简单平均模长。为了与重心公式的加权方法匹配，这里举一个加权平均模长的例子：\\
对于均匀场，我们需要计算修正参数，也就是修正之后的模长：
\begin{equation}
  L_i=\frac{1}{|V_i|}\int_{V_i}|F(x)|dx
\end{equation}
或者
\begin{equation}
  L_i=\frac{1}{V_i}(\int_{V_i}|F(x)|^2 dx)^{1/2}
\end{equation}
对于非均匀场：
\begin{equation}
  L_i=\frac{(\int_{V_i}\rho(x)|F(x)|^2 dx)^{1/2}}{\int_{V_i}\rho(x)dx}
\end{equation}
\indent 这样，我们通过将之前的单位向量 $\overline{y}_i$ 修正为 $\overline{y}_i * L_i$。每个$\overline{y}_i*L_i$ 的长度表征了整个区域内的向量的平均大小，即可以更直观地表现出不同区域向量大小的区别。\\
\indent 通常，我们也会用不同颜色表征数据的大小。比如天气预报中的卫星云图，亮色一般代表高温而暗色一般代表低温。这在标量场中是常用的手段，而对于向量场，也可以通过颜色来多表征一些信息。典型的像是密度，温度，压强等在流场计算中十分重要的标量，或者区域内向量长度的方差之类的统计量。
\begin{figure}[h]
\centering
\subfigure{\label{full}}
\addtocounter{subfigure}{-2}
\subfigure[所有数据点绘制]{\subfigure{\includegraphics[width=0.2\textwidth]{full.png}}}
\subfigure{\label{CVT}}
\addtocounter{subfigure}{-2}
\subfigure[只有重心绘制]{\subfigure{\includegraphics[width=0.2\textwidth]{CVT.png}}}
\caption{圆柱绕流}
\end{figure}
\indent 在 fig.\ref{full}中，我们将所有的数据点进行了绘制，而在 fig.\ref{CVT}中仅绘制了沃罗努瓦划分的重心点。通过 fig.\ref{CVT} 我们可以很明显的看出圆柱右侧的两个涡这一明显的特征，而在 fig.\ref{full}中这一特征被过多的数据点掩盖了。这即是基于CVT的可视化的典型优势。\\


\section{基于CVT的动态流场数据可视化}

\indent 有时我们需要可视化一段时间的流场，从而观察其变化。但对于多个时间步，获得重心沃罗努瓦划分的计算时间将会是个很大的问题。为此，我们基于两个连续时间步的连续性，提出一种起始点$\{v_i\}_{i=1}^k$的选择方法来加速对动态流场数据重心沃罗努瓦划分的计算。\\
\indent 通常来说，因为流场变化是连续的，所以只要时间间隔并不太长上一个时间步的生成元与当前时间层的生成元的距离不会很大。因为正如算法中重心的计算公式是区域内所有点关于向量模和密度函数的加权平均，换言之，只要向量模，和密度函数变化不大，那么这个加权平均值也不会有太大的改变。\\
\indent 根据以上的讨论，我们可以通过将上一个时间层的生成元作为下一个时间层的起始点。通过这种方法，相比于简单随机选起始点，时间花费可以减少一般以上。下面两个表格展示了具体的时间统计：
\begin{table}[!h]
\caption{非随机选点的时间花费}
\begin{center}
\begin{tabular}{|c|c|c|}
  \hline
  % after \\: \hline or \cline{col1-col2} \cline{col3-col4} ...
  时间步 & 迭代起始时间(ms) & 迭代终止时间(ms)\\
  \hline
0 & 89 & 17834\\
5 & 51997 & 61029\\
10 & 86088 & 90436\\
15 & 121760 & 126588\\
20 & 156476 & 163923\\
25 & 195473 & 209979\\
30 & 257546 & 266173\\
35 & 310135 & 325948\\
40 & 358649 & 372275\\
45 & 417337 & 422617\\
50 & 451361 & 454023\\
55 & 459536 & 460893\\
  \hline
\end{tabular}
\end{center}
\end{table}

\begin{table}[!h]
\caption{随机选点的时间花费}
\begin{center}
\begin{tabular}{|c|c|c|}
  \hline
  % after \\: \hline or \cline{col1-col2} \cline{col3-col4} ...
  时间步 & 迭代起始时间(ms) & 迭代终止时间(ms)\\
  \hline
0 & 55 & 17645\\
5 & 87409 & 111617\\
10 & 176868 & 197379\\
15 & 273771 & 294030\\
20 & 370727 & 387668\\
25 & 462774 & 479188\\
30 & 551769 & 572305\\
35 & 660625 & 692617\\
40 & 780755 & 808371\\
45 & 900107 & 920976\\
50 & 1004445 & 1024704\\
55 & 1140349 & 1162175\\
  \hline
\end{tabular}
\end{center}
\end{table}

\begin{thebibliography}{00}
% 参考文献著录规则采用 BG/T 7714-2005 标准.
% 文献类型标志: 普通图书M; 会议录C; 汇编G; 报纸N; 期刊J; 学位论文D;
%               报告R; 标准S; 专利P; 数据库DB; 计算机程序CP; 电子公告EB。
% 电子文献载体类型标志: 磁带MT; 磁盘DK; 光盘CD; 联机网络OL。


\bibitem{} ....

\end{thebibliography}
\end{document}
